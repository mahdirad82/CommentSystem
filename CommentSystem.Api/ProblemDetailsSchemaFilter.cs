using Microsoft.OpenApi.Models;
using Swashbuckle.AspNetCore.SwaggerGen;

namespace CommentSystem.Api;

/// <summary>
/// Applies a schema filter to ProblemDetails and ValidationProblemDetails to customize their representation in Swagger/OpenAPI documentation.
/// </summary>
public class ProblemDetailsSchemaFilter : IDocumentFilter
{
    /// <summary>
    /// Applies the filter to the OpenAPI document.
    /// </summary>
    /// <param name="swaggerDoc">The OpenAPI document.</param>
    /// <param name="context">The document filter context.</param>
    public void Apply(OpenApiDocument swaggerDoc, DocumentFilterContext context)
    {
        // Define the properties for ProblemDetails
        var problemDetailsProperties = new Dictionary<string, OpenApiSchema>
        {
            {
                "type",
                new OpenApiSchema
                {
                    Type = "string", Format = "uri",
                    Description = "A URI reference that identifies the problem type."
                }
            },
            {
                "title",
                new OpenApiSchema
                    { Type = "string", Description = "A short, human-readable summary of the problem type." }
            },
            {
                "status",
                new OpenApiSchema
                {
                    Type = "integer", Format = "int32",
                    Description =
                        "The HTTP status code generated by the origin server for this occurrence of the problem."
                }
            },
            {
                "detail",
                new OpenApiSchema
                {
                    Type = "string",
                    Description = "A human-readable explanation specific to this occurrence of the problem."
                }
            },
            {
                "traceId",
                new OpenApiSchema
                {
                    Type = "string", Description = "A unique identifier for the request, useful for tracing."
                }
            }
        };

        // Remove existing ProblemDetails schema if it exists and add custom one
        swaggerDoc.Components.Schemas.Remove("ProblemDetails");
        swaggerDoc.Components.Schemas.Add("ProblemDetails", new OpenApiSchema
        {
            Type = "object",
            Properties = problemDetailsProperties,
            Description = "A problem detail object as defined in RFC 7807."
        });

        // Define the properties for ValidationProblemDetails
        var validationProblemDetailsProperties =
            new Dictionary<string, OpenApiSchema>(problemDetailsProperties)
            {
                {
                    "errors", new OpenApiSchema
                    {
                        Type = "object",
                        AdditionalProperties = new OpenApiSchema
                        {
                            Type = "array",
                            Items = new OpenApiSchema { Type = "string" }
                        },
                        Description = "A dictionary of validation errors."
                    }
                }
            };

        // Remove existing ValidationProblemDetails schema if it exists and add custom one
        swaggerDoc.Components.Schemas.Remove("ValidationProblemDetails");
        swaggerDoc.Components.Schemas.Add("ValidationProblemDetails", new OpenApiSchema
        {
            Type = "object",
            Properties = validationProblemDetailsProperties,
            Description =
                "A validation problem detail object as defined in RFC 7807, with additional validation errors."
        });
    }
}